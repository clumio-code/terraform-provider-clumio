---
page_title: "Getting Started with Data Protection"
---

# Getting Started with Data Protection
- [Preparation](#preparation)
- [Connect an AWS account](#connect)
- [Automate Data Protection](#automate)
- [Sample Configuration](#sample)

The following is a quick overview of how to get started with the [Clumio provider](https://registry.terraform.io/providers/clumio-code/clumio/latest)
and the [Clumio AWS module](https://registry.terraform.io/modules/clumio-code/aws-template/clumio/latest).
As the provider uses APIs to abstract the use of the Clumio cloud, you should create an API key from
the Clumio UI or retrieve an existing one. For help with creating an API key, please refer to the
Clumio documentation. The subsequent steps assume that such an API key is available to you. In
addition, any use of keys in the following documentation is for example use only. Please refer to
Terraform documentation with respect to the best way to inject keys and secrets into Terraform
configurations.

<a name="preparation"></a>
## Preparation
The following starter Terraform configuration sets up for the required Clumio and AWS providers.
The Clumio provider interacts with the Clumio cloud on your behalf. For allowed API base URLs,
please refer to the [Clumio provider documentation](https://registry.terraform.io/providers/clumio-code/clumio/latest/docs).
Download the providers with `terraform init`:

```shell
terraform {
  required_providers {
    clumio = {
      source  = "clumio-code/clumio"
      version = "~>0.5.1"
    }
    aws = {}
  }
}

# Instantiate the Clumio provider
provider "clumio" {
  clumio_api_token    = "<clumio_api_token>"
  clumio_api_base_url = "<clumio_api_base_url>"
}
```

The AWS provider is used by the Clumio AWS module to provision the resources required to perform
data protection in the AWS account and region to be protected. As such, set the following
environment variables:

```shell
$ export AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY_ID>
$ export AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>

# If a session token is required ...
$ export AWS_SESSION_TOKEN=<AWS_SESSION_TOKEN>
```

<a name="connect"></a>
## Connect an AWS account
Next, add the following to the Terraform configuration to instantiate a Clumio connection to the AWS
account associated with the AWS environment variables setup during Preparation. In this example,
us-west-2 is specified as the region in which to install the Clumio AWS module.

```shell
# Instantiate the AWS provider
provider "aws" {
  region = "us-west-2"
}

# Retrieve the effective AWS account ID and region
data aws_caller_identity current {}
data aws_region current {}

# Register a new Clumio connection for the effective AWS account ID and region
resource "clumio_aws_connection" "connection" {
  account_native_id = data.aws_caller_identity.current.account_id
  aws_region        = data.aws_region.current.name
  description       = "My Clumio Connection"
}

# Install the Clumio AWS template onto the registered connection
module "clumio_protect" {
  providers = {
    clumio = clumio
    aws    = aws
  }
  source                = "clumio-code/aws-template/clumio"
  clumio_token          = clumio_aws_connection.connection.token
  role_external_id      = clumio_aws_connection.connection.role_external_id
  aws_account_id        = clumio_aws_connection.connection.account_native_id
  aws_region            = clumio_aws_connection.connection.aws_region
  clumio_aws_account_id = clumio_aws_connection.connection.clumio_aws_account_id

  # Enable protection of all data sources.
  is_ebs_enabled       = true
  is_rds_enabled       = true
  is_ec2_mssql_enabled = true
  is_dynamodb_enabled  = true
  is_s3_enabled        = true
}
```

Confirm your work thus far with `terraform init` to download the Clumio AWS module and then
`terraform plan` to inspect what resources will be provisioned. NOTE the above Terraform
configuration enables support for data protection on multiple AWS data sources. When ready run
`terraform apply`.

<a name="automate"></a>
## Automate Data Protection
To get started with backup, include the following in the Terraform configuration to create a
Protection Group for S3, define a policy for it, and associate the two together. As a result, any
S3 bucket with the tag key-value clumio:example will be protected:

```shell
# Create a Clumio protection group that aggregates S3 buckets with the tag "clumio:example"
resource "clumio_protection_group" "protection_group" {
  name        = "My Clumio Protection Group"
  bucket_rule = "{\"aws_tag\":{\"$eq\":{\"key\":\"clumio\", \"value\":\"example\"}}}"
  object_filter {
    storage_classes = ["S3 Standard", "S3 Standard-IA"]
  }
}

# Create a Clumio policy for protection groups with a 7-day RPO and 3-month retention
resource "clumio_policy" "policy" {
  name = "S3 Gold"
  operations {
    action_setting = "immediate"
    type           = "protection_group_backup"
    slas {
      retention_duration {
        unit  = "months"
        value = 3
      }
      rpo_frequency {
        unit  = "days"
        value = 7
      }
    }
    advanced_settings {
      protection_group_backup {
        backup_tier = "cold"
      }
    }
  }
}

# Assign the policy to the protection group
resource "clumio_policy_assignment" "assignment" {
  entity_id   = clumio_protection_group.protection_group.id
  entity_type = "protection_group"
  policy_id   = clumio_policy.policy.id
}
```

Again confirm your work with `terraform plan` (`terraform init` is not required) to inspect what
resources will be provisioned. When ready run `terraform apply`. Any S3 bucket with the tag
key-value clumio:example will start to seed and subsequently backup every 7 days.

<a name="sample"></a>
## Sample Configuration
The following is the configuration from this guide in its entirety:

{{ tffile "examples/guides/getting_started.tf" }}
