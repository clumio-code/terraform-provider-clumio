// Code generated by mockery. DO NOT EDIT.

package sdkclients

import (
	apiutils "github.com/clumio-code/clumio-go-sdk/api_utils"
	mock "github.com/stretchr/testify/mock"

	models "github.com/clumio-code/clumio-go-sdk/models"
)

// MockProtectionGroupClient is an autogenerated mock type for the ProtectionGroupClient type
type MockProtectionGroupClient struct {
	mock.Mock
}

type MockProtectionGroupClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockProtectionGroupClient) EXPECT() *MockProtectionGroupClient_Expecter {
	return &MockProtectionGroupClient_Expecter{mock: &_m.Mock}
}

// AddBucketProtectionGroup provides a mock function with given fields: groupId, body
func (_m *MockProtectionGroupClient) AddBucketProtectionGroup(groupId string, body models.AddBucketProtectionGroupV1Request) (*models.AddBucketToProtectionGroupResponse, *apiutils.APIError) {
	ret := _m.Called(groupId, body)

	if len(ret) == 0 {
		panic("no return value specified for AddBucketProtectionGroup")
	}

	var r0 *models.AddBucketToProtectionGroupResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string, models.AddBucketProtectionGroupV1Request) (*models.AddBucketToProtectionGroupResponse, *apiutils.APIError)); ok {
		return rf(groupId, body)
	}
	if rf, ok := ret.Get(0).(func(string, models.AddBucketProtectionGroupV1Request) *models.AddBucketToProtectionGroupResponse); ok {
		r0 = rf(groupId, body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AddBucketToProtectionGroupResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string, models.AddBucketProtectionGroupV1Request) *apiutils.APIError); ok {
		r1 = rf(groupId, body)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockProtectionGroupClient_AddBucketProtectionGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddBucketProtectionGroup'
type MockProtectionGroupClient_AddBucketProtectionGroup_Call struct {
	*mock.Call
}

// AddBucketProtectionGroup is a helper method to define mock.On call
//   - groupId string
//   - body models.AddBucketProtectionGroupV1Request
func (_e *MockProtectionGroupClient_Expecter) AddBucketProtectionGroup(groupId interface{}, body interface{}) *MockProtectionGroupClient_AddBucketProtectionGroup_Call {
	return &MockProtectionGroupClient_AddBucketProtectionGroup_Call{Call: _e.mock.On("AddBucketProtectionGroup", groupId, body)}
}

func (_c *MockProtectionGroupClient_AddBucketProtectionGroup_Call) Run(run func(groupId string, body models.AddBucketProtectionGroupV1Request)) *MockProtectionGroupClient_AddBucketProtectionGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(models.AddBucketProtectionGroupV1Request))
	})
	return _c
}

func (_c *MockProtectionGroupClient_AddBucketProtectionGroup_Call) Return(_a0 *models.AddBucketToProtectionGroupResponse, _a1 *apiutils.APIError) *MockProtectionGroupClient_AddBucketProtectionGroup_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProtectionGroupClient_AddBucketProtectionGroup_Call) RunAndReturn(run func(string, models.AddBucketProtectionGroupV1Request) (*models.AddBucketToProtectionGroupResponse, *apiutils.APIError)) *MockProtectionGroupClient_AddBucketProtectionGroup_Call {
	_c.Call.Return(run)
	return _c
}

// CreateProtectionGroup provides a mock function with given fields: body
func (_m *MockProtectionGroupClient) CreateProtectionGroup(body models.CreateProtectionGroupV1Request) (*models.CreateProtectionGroupResponse, *apiutils.APIError) {
	ret := _m.Called(body)

	if len(ret) == 0 {
		panic("no return value specified for CreateProtectionGroup")
	}

	var r0 *models.CreateProtectionGroupResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(models.CreateProtectionGroupV1Request) (*models.CreateProtectionGroupResponse, *apiutils.APIError)); ok {
		return rf(body)
	}
	if rf, ok := ret.Get(0).(func(models.CreateProtectionGroupV1Request) *models.CreateProtectionGroupResponse); ok {
		r0 = rf(body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.CreateProtectionGroupResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(models.CreateProtectionGroupV1Request) *apiutils.APIError); ok {
		r1 = rf(body)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockProtectionGroupClient_CreateProtectionGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateProtectionGroup'
type MockProtectionGroupClient_CreateProtectionGroup_Call struct {
	*mock.Call
}

// CreateProtectionGroup is a helper method to define mock.On call
//   - body models.CreateProtectionGroupV1Request
func (_e *MockProtectionGroupClient_Expecter) CreateProtectionGroup(body interface{}) *MockProtectionGroupClient_CreateProtectionGroup_Call {
	return &MockProtectionGroupClient_CreateProtectionGroup_Call{Call: _e.mock.On("CreateProtectionGroup", body)}
}

func (_c *MockProtectionGroupClient_CreateProtectionGroup_Call) Run(run func(body models.CreateProtectionGroupV1Request)) *MockProtectionGroupClient_CreateProtectionGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.CreateProtectionGroupV1Request))
	})
	return _c
}

func (_c *MockProtectionGroupClient_CreateProtectionGroup_Call) Return(_a0 *models.CreateProtectionGroupResponse, _a1 *apiutils.APIError) *MockProtectionGroupClient_CreateProtectionGroup_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProtectionGroupClient_CreateProtectionGroup_Call) RunAndReturn(run func(models.CreateProtectionGroupV1Request) (*models.CreateProtectionGroupResponse, *apiutils.APIError)) *MockProtectionGroupClient_CreateProtectionGroup_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteBucketProtectionGroup provides a mock function with given fields: groupId, bucketId
func (_m *MockProtectionGroupClient) DeleteBucketProtectionGroup(groupId string, bucketId string) (*models.DeleteBucketFromProtectionGroupResponse, *apiutils.APIError) {
	ret := _m.Called(groupId, bucketId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteBucketProtectionGroup")
	}

	var r0 *models.DeleteBucketFromProtectionGroupResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string, string) (*models.DeleteBucketFromProtectionGroupResponse, *apiutils.APIError)); ok {
		return rf(groupId, bucketId)
	}
	if rf, ok := ret.Get(0).(func(string, string) *models.DeleteBucketFromProtectionGroupResponse); ok {
		r0 = rf(groupId, bucketId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeleteBucketFromProtectionGroupResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) *apiutils.APIError); ok {
		r1 = rf(groupId, bucketId)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockProtectionGroupClient_DeleteBucketProtectionGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteBucketProtectionGroup'
type MockProtectionGroupClient_DeleteBucketProtectionGroup_Call struct {
	*mock.Call
}

// DeleteBucketProtectionGroup is a helper method to define mock.On call
//   - groupId string
//   - bucketId string
func (_e *MockProtectionGroupClient_Expecter) DeleteBucketProtectionGroup(groupId interface{}, bucketId interface{}) *MockProtectionGroupClient_DeleteBucketProtectionGroup_Call {
	return &MockProtectionGroupClient_DeleteBucketProtectionGroup_Call{Call: _e.mock.On("DeleteBucketProtectionGroup", groupId, bucketId)}
}

func (_c *MockProtectionGroupClient_DeleteBucketProtectionGroup_Call) Run(run func(groupId string, bucketId string)) *MockProtectionGroupClient_DeleteBucketProtectionGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockProtectionGroupClient_DeleteBucketProtectionGroup_Call) Return(_a0 *models.DeleteBucketFromProtectionGroupResponse, _a1 *apiutils.APIError) *MockProtectionGroupClient_DeleteBucketProtectionGroup_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProtectionGroupClient_DeleteBucketProtectionGroup_Call) RunAndReturn(run func(string, string) (*models.DeleteBucketFromProtectionGroupResponse, *apiutils.APIError)) *MockProtectionGroupClient_DeleteBucketProtectionGroup_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteProtectionGroup provides a mock function with given fields: groupId
func (_m *MockProtectionGroupClient) DeleteProtectionGroup(groupId string) (interface{}, *apiutils.APIError) {
	ret := _m.Called(groupId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteProtectionGroup")
	}

	var r0 interface{}
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string) (interface{}, *apiutils.APIError)); ok {
		return rf(groupId)
	}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(groupId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	if rf, ok := ret.Get(1).(func(string) *apiutils.APIError); ok {
		r1 = rf(groupId)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockProtectionGroupClient_DeleteProtectionGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteProtectionGroup'
type MockProtectionGroupClient_DeleteProtectionGroup_Call struct {
	*mock.Call
}

// DeleteProtectionGroup is a helper method to define mock.On call
//   - groupId string
func (_e *MockProtectionGroupClient_Expecter) DeleteProtectionGroup(groupId interface{}) *MockProtectionGroupClient_DeleteProtectionGroup_Call {
	return &MockProtectionGroupClient_DeleteProtectionGroup_Call{Call: _e.mock.On("DeleteProtectionGroup", groupId)}
}

func (_c *MockProtectionGroupClient_DeleteProtectionGroup_Call) Run(run func(groupId string)) *MockProtectionGroupClient_DeleteProtectionGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockProtectionGroupClient_DeleteProtectionGroup_Call) Return(_a0 interface{}, _a1 *apiutils.APIError) *MockProtectionGroupClient_DeleteProtectionGroup_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProtectionGroupClient_DeleteProtectionGroup_Call) RunAndReturn(run func(string) (interface{}, *apiutils.APIError)) *MockProtectionGroupClient_DeleteProtectionGroup_Call {
	_c.Call.Return(run)
	return _c
}

// ListProtectionGroups provides a mock function with given fields: limit, start, filter
func (_m *MockProtectionGroupClient) ListProtectionGroups(limit *int64, start *string, filter *string) (*models.ListProtectionGroupsResponse, *apiutils.APIError) {
	ret := _m.Called(limit, start, filter)

	if len(ret) == 0 {
		panic("no return value specified for ListProtectionGroups")
	}

	var r0 *models.ListProtectionGroupsResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(*int64, *string, *string) (*models.ListProtectionGroupsResponse, *apiutils.APIError)); ok {
		return rf(limit, start, filter)
	}
	if rf, ok := ret.Get(0).(func(*int64, *string, *string) *models.ListProtectionGroupsResponse); ok {
		r0 = rf(limit, start, filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ListProtectionGroupsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*int64, *string, *string) *apiutils.APIError); ok {
		r1 = rf(limit, start, filter)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockProtectionGroupClient_ListProtectionGroups_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListProtectionGroups'
type MockProtectionGroupClient_ListProtectionGroups_Call struct {
	*mock.Call
}

// ListProtectionGroups is a helper method to define mock.On call
//   - limit *int64
//   - start *string
//   - filter *string
func (_e *MockProtectionGroupClient_Expecter) ListProtectionGroups(limit interface{}, start interface{}, filter interface{}) *MockProtectionGroupClient_ListProtectionGroups_Call {
	return &MockProtectionGroupClient_ListProtectionGroups_Call{Call: _e.mock.On("ListProtectionGroups", limit, start, filter)}
}

func (_c *MockProtectionGroupClient_ListProtectionGroups_Call) Run(run func(limit *int64, start *string, filter *string)) *MockProtectionGroupClient_ListProtectionGroups_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*int64), args[1].(*string), args[2].(*string))
	})
	return _c
}

func (_c *MockProtectionGroupClient_ListProtectionGroups_Call) Return(_a0 *models.ListProtectionGroupsResponse, _a1 *apiutils.APIError) *MockProtectionGroupClient_ListProtectionGroups_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProtectionGroupClient_ListProtectionGroups_Call) RunAndReturn(run func(*int64, *string, *string) (*models.ListProtectionGroupsResponse, *apiutils.APIError)) *MockProtectionGroupClient_ListProtectionGroups_Call {
	_c.Call.Return(run)
	return _c
}

// ReadProtectionGroup provides a mock function with given fields: groupId
func (_m *MockProtectionGroupClient) ReadProtectionGroup(groupId string) (*models.ReadProtectionGroupResponse, *apiutils.APIError) {
	ret := _m.Called(groupId)

	if len(ret) == 0 {
		panic("no return value specified for ReadProtectionGroup")
	}

	var r0 *models.ReadProtectionGroupResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string) (*models.ReadProtectionGroupResponse, *apiutils.APIError)); ok {
		return rf(groupId)
	}
	if rf, ok := ret.Get(0).(func(string) *models.ReadProtectionGroupResponse); ok {
		r0 = rf(groupId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ReadProtectionGroupResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string) *apiutils.APIError); ok {
		r1 = rf(groupId)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockProtectionGroupClient_ReadProtectionGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadProtectionGroup'
type MockProtectionGroupClient_ReadProtectionGroup_Call struct {
	*mock.Call
}

// ReadProtectionGroup is a helper method to define mock.On call
//   - groupId string
func (_e *MockProtectionGroupClient_Expecter) ReadProtectionGroup(groupId interface{}) *MockProtectionGroupClient_ReadProtectionGroup_Call {
	return &MockProtectionGroupClient_ReadProtectionGroup_Call{Call: _e.mock.On("ReadProtectionGroup", groupId)}
}

func (_c *MockProtectionGroupClient_ReadProtectionGroup_Call) Run(run func(groupId string)) *MockProtectionGroupClient_ReadProtectionGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockProtectionGroupClient_ReadProtectionGroup_Call) Return(_a0 *models.ReadProtectionGroupResponse, _a1 *apiutils.APIError) *MockProtectionGroupClient_ReadProtectionGroup_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProtectionGroupClient_ReadProtectionGroup_Call) RunAndReturn(run func(string) (*models.ReadProtectionGroupResponse, *apiutils.APIError)) *MockProtectionGroupClient_ReadProtectionGroup_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateProtectionGroup provides a mock function with given fields: groupId, body
func (_m *MockProtectionGroupClient) UpdateProtectionGroup(groupId string, body *models.UpdateProtectionGroupV1Request) (*models.UpdateProtectionGroupResponse, *apiutils.APIError) {
	ret := _m.Called(groupId, body)

	if len(ret) == 0 {
		panic("no return value specified for UpdateProtectionGroup")
	}

	var r0 *models.UpdateProtectionGroupResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string, *models.UpdateProtectionGroupV1Request) (*models.UpdateProtectionGroupResponse, *apiutils.APIError)); ok {
		return rf(groupId, body)
	}
	if rf, ok := ret.Get(0).(func(string, *models.UpdateProtectionGroupV1Request) *models.UpdateProtectionGroupResponse); ok {
		r0 = rf(groupId, body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.UpdateProtectionGroupResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string, *models.UpdateProtectionGroupV1Request) *apiutils.APIError); ok {
		r1 = rf(groupId, body)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockProtectionGroupClient_UpdateProtectionGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateProtectionGroup'
type MockProtectionGroupClient_UpdateProtectionGroup_Call struct {
	*mock.Call
}

// UpdateProtectionGroup is a helper method to define mock.On call
//   - groupId string
//   - body *models.UpdateProtectionGroupV1Request
func (_e *MockProtectionGroupClient_Expecter) UpdateProtectionGroup(groupId interface{}, body interface{}) *MockProtectionGroupClient_UpdateProtectionGroup_Call {
	return &MockProtectionGroupClient_UpdateProtectionGroup_Call{Call: _e.mock.On("UpdateProtectionGroup", groupId, body)}
}

func (_c *MockProtectionGroupClient_UpdateProtectionGroup_Call) Run(run func(groupId string, body *models.UpdateProtectionGroupV1Request)) *MockProtectionGroupClient_UpdateProtectionGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(*models.UpdateProtectionGroupV1Request))
	})
	return _c
}

func (_c *MockProtectionGroupClient_UpdateProtectionGroup_Call) Return(_a0 *models.UpdateProtectionGroupResponse, _a1 *apiutils.APIError) *MockProtectionGroupClient_UpdateProtectionGroup_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProtectionGroupClient_UpdateProtectionGroup_Call) RunAndReturn(run func(string, *models.UpdateProtectionGroupV1Request) (*models.UpdateProtectionGroupResponse, *apiutils.APIError)) *MockProtectionGroupClient_UpdateProtectionGroup_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockProtectionGroupClient creates a new instance of MockProtectionGroupClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockProtectionGroupClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockProtectionGroupClient {
	mock := &MockProtectionGroupClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
