// Code generated by mockery. DO NOT EDIT.

package sdkclients

import (
	apiutils "github.com/clumio-code/clumio-go-sdk/api_utils"
	mock "github.com/stretchr/testify/mock"

	models "github.com/clumio-code/clumio-go-sdk/models"
)

// MockAutoUserProvisioningSettingClient is an autogenerated mock type for the AutoUserProvisioningSettingClient type
type MockAutoUserProvisioningSettingClient struct {
	mock.Mock
}

type MockAutoUserProvisioningSettingClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAutoUserProvisioningSettingClient) EXPECT() *MockAutoUserProvisioningSettingClient_Expecter {
	return &MockAutoUserProvisioningSettingClient_Expecter{mock: &_m.Mock}
}

// ReadAutoUserProvisioningSetting provides a mock function with given fields:
func (_m *MockAutoUserProvisioningSettingClient) ReadAutoUserProvisioningSetting() (*models.ReadAutoUserProvisioningSettingResponse, *apiutils.APIError) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ReadAutoUserProvisioningSetting")
	}

	var r0 *models.ReadAutoUserProvisioningSettingResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func() (*models.ReadAutoUserProvisioningSettingResponse, *apiutils.APIError)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *models.ReadAutoUserProvisioningSettingResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ReadAutoUserProvisioningSettingResponse)
		}
	}

	if rf, ok := ret.Get(1).(func() *apiutils.APIError); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadAutoUserProvisioningSetting'
type MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call struct {
	*mock.Call
}

// ReadAutoUserProvisioningSetting is a helper method to define mock.On call
func (_e *MockAutoUserProvisioningSettingClient_Expecter) ReadAutoUserProvisioningSetting() *MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call {
	return &MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call{Call: _e.mock.On("ReadAutoUserProvisioningSetting")}
}

func (_c *MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call) Run(run func()) *MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call) Return(_a0 *models.ReadAutoUserProvisioningSettingResponse, _a1 *apiutils.APIError) *MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call) RunAndReturn(run func() (*models.ReadAutoUserProvisioningSettingResponse, *apiutils.APIError)) *MockAutoUserProvisioningSettingClient_ReadAutoUserProvisioningSetting_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateAutoUserProvisioningSetting provides a mock function with given fields: body
func (_m *MockAutoUserProvisioningSettingClient) UpdateAutoUserProvisioningSetting(body *models.UpdateAutoUserProvisioningSettingV1Request) (*models.UpdateAutoUserProvisioningSettingResponse, *apiutils.APIError) {
	ret := _m.Called(body)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAutoUserProvisioningSetting")
	}

	var r0 *models.UpdateAutoUserProvisioningSettingResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(*models.UpdateAutoUserProvisioningSettingV1Request) (*models.UpdateAutoUserProvisioningSettingResponse, *apiutils.APIError)); ok {
		return rf(body)
	}
	if rf, ok := ret.Get(0).(func(*models.UpdateAutoUserProvisioningSettingV1Request) *models.UpdateAutoUserProvisioningSettingResponse); ok {
		r0 = rf(body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.UpdateAutoUserProvisioningSettingResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*models.UpdateAutoUserProvisioningSettingV1Request) *apiutils.APIError); ok {
		r1 = rf(body)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateAutoUserProvisioningSetting'
type MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call struct {
	*mock.Call
}

// UpdateAutoUserProvisioningSetting is a helper method to define mock.On call
//   - body *models.UpdateAutoUserProvisioningSettingV1Request
func (_e *MockAutoUserProvisioningSettingClient_Expecter) UpdateAutoUserProvisioningSetting(body interface{}) *MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call {
	return &MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call{Call: _e.mock.On("UpdateAutoUserProvisioningSetting", body)}
}

func (_c *MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call) Run(run func(body *models.UpdateAutoUserProvisioningSettingV1Request)) *MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.UpdateAutoUserProvisioningSettingV1Request))
	})
	return _c
}

func (_c *MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call) Return(_a0 *models.UpdateAutoUserProvisioningSettingResponse, _a1 *apiutils.APIError) *MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call) RunAndReturn(run func(*models.UpdateAutoUserProvisioningSettingV1Request) (*models.UpdateAutoUserProvisioningSettingResponse, *apiutils.APIError)) *MockAutoUserProvisioningSettingClient_UpdateAutoUserProvisioningSetting_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAutoUserProvisioningSettingClient creates a new instance of MockAutoUserProvisioningSettingClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAutoUserProvisioningSettingClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAutoUserProvisioningSettingClient {
	mock := &MockAutoUserProvisioningSettingClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
