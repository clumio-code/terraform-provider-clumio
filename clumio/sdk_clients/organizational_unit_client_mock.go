// Code generated by mockery. DO NOT EDIT.

package sdkclients

import (
	apiutils "github.com/clumio-code/clumio-go-sdk/api_utils"
	mock "github.com/stretchr/testify/mock"

	models "github.com/clumio-code/clumio-go-sdk/models"
)

// MockOrganizationalUnitClient is an autogenerated mock type for the OrganizationalUnitClient type
type MockOrganizationalUnitClient struct {
	mock.Mock
}

type MockOrganizationalUnitClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOrganizationalUnitClient) EXPECT() *MockOrganizationalUnitClient_Expecter {
	return &MockOrganizationalUnitClient_Expecter{mock: &_m.Mock}
}

// CreateOrganizationalUnit provides a mock function with given fields: embed, body
func (_m *MockOrganizationalUnitClient) CreateOrganizationalUnit(embed *string, body *models.CreateOrganizationalUnitV2Request) (*models.CreateOrganizationalUnitResponseWrapper, *apiutils.APIError) {
	ret := _m.Called(embed, body)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrganizationalUnit")
	}

	var r0 *models.CreateOrganizationalUnitResponseWrapper
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(*string, *models.CreateOrganizationalUnitV2Request) (*models.CreateOrganizationalUnitResponseWrapper, *apiutils.APIError)); ok {
		return rf(embed, body)
	}
	if rf, ok := ret.Get(0).(func(*string, *models.CreateOrganizationalUnitV2Request) *models.CreateOrganizationalUnitResponseWrapper); ok {
		r0 = rf(embed, body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.CreateOrganizationalUnitResponseWrapper)
		}
	}

	if rf, ok := ret.Get(1).(func(*string, *models.CreateOrganizationalUnitV2Request) *apiutils.APIError); ok {
		r1 = rf(embed, body)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockOrganizationalUnitClient_CreateOrganizationalUnit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrganizationalUnit'
type MockOrganizationalUnitClient_CreateOrganizationalUnit_Call struct {
	*mock.Call
}

// CreateOrganizationalUnit is a helper method to define mock.On call
//   - embed *string
//   - body *models.CreateOrganizationalUnitV2Request
func (_e *MockOrganizationalUnitClient_Expecter) CreateOrganizationalUnit(embed interface{}, body interface{}) *MockOrganizationalUnitClient_CreateOrganizationalUnit_Call {
	return &MockOrganizationalUnitClient_CreateOrganizationalUnit_Call{Call: _e.mock.On("CreateOrganizationalUnit", embed, body)}
}

func (_c *MockOrganizationalUnitClient_CreateOrganizationalUnit_Call) Run(run func(embed *string, body *models.CreateOrganizationalUnitV2Request)) *MockOrganizationalUnitClient_CreateOrganizationalUnit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*string), args[1].(*models.CreateOrganizationalUnitV2Request))
	})
	return _c
}

func (_c *MockOrganizationalUnitClient_CreateOrganizationalUnit_Call) Return(_a0 *models.CreateOrganizationalUnitResponseWrapper, _a1 *apiutils.APIError) *MockOrganizationalUnitClient_CreateOrganizationalUnit_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockOrganizationalUnitClient_CreateOrganizationalUnit_Call) RunAndReturn(run func(*string, *models.CreateOrganizationalUnitV2Request) (*models.CreateOrganizationalUnitResponseWrapper, *apiutils.APIError)) *MockOrganizationalUnitClient_CreateOrganizationalUnit_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteOrganizationalUnit provides a mock function with given fields: id, embed
func (_m *MockOrganizationalUnitClient) DeleteOrganizationalUnit(id string, embed *string) (*models.DeleteOrganizationalUnitResponse, *apiutils.APIError) {
	ret := _m.Called(id, embed)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganizationalUnit")
	}

	var r0 *models.DeleteOrganizationalUnitResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string, *string) (*models.DeleteOrganizationalUnitResponse, *apiutils.APIError)); ok {
		return rf(id, embed)
	}
	if rf, ok := ret.Get(0).(func(string, *string) *models.DeleteOrganizationalUnitResponse); ok {
		r0 = rf(id, embed)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeleteOrganizationalUnitResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string, *string) *apiutils.APIError); ok {
		r1 = rf(id, embed)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteOrganizationalUnit'
type MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call struct {
	*mock.Call
}

// DeleteOrganizationalUnit is a helper method to define mock.On call
//   - id string
//   - embed *string
func (_e *MockOrganizationalUnitClient_Expecter) DeleteOrganizationalUnit(id interface{}, embed interface{}) *MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call {
	return &MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call{Call: _e.mock.On("DeleteOrganizationalUnit", id, embed)}
}

func (_c *MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call) Run(run func(id string, embed *string)) *MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(*string))
	})
	return _c
}

func (_c *MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call) Return(_a0 *models.DeleteOrganizationalUnitResponse, _a1 *apiutils.APIError) *MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call) RunAndReturn(run func(string, *string) (*models.DeleteOrganizationalUnitResponse, *apiutils.APIError)) *MockOrganizationalUnitClient_DeleteOrganizationalUnit_Call {
	_c.Call.Return(run)
	return _c
}

// ListOrganizationalUnits provides a mock function with given fields: limit, start, filter
func (_m *MockOrganizationalUnitClient) ListOrganizationalUnits(limit *int64, start *string, filter *string) (*models.ListOrganizationalUnitsResponse, *apiutils.APIError) {
	ret := _m.Called(limit, start, filter)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganizationalUnits")
	}

	var r0 *models.ListOrganizationalUnitsResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(*int64, *string, *string) (*models.ListOrganizationalUnitsResponse, *apiutils.APIError)); ok {
		return rf(limit, start, filter)
	}
	if rf, ok := ret.Get(0).(func(*int64, *string, *string) *models.ListOrganizationalUnitsResponse); ok {
		r0 = rf(limit, start, filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ListOrganizationalUnitsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*int64, *string, *string) *apiutils.APIError); ok {
		r1 = rf(limit, start, filter)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockOrganizationalUnitClient_ListOrganizationalUnits_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListOrganizationalUnits'
type MockOrganizationalUnitClient_ListOrganizationalUnits_Call struct {
	*mock.Call
}

// ListOrganizationalUnits is a helper method to define mock.On call
//   - limit *int64
//   - start *string
//   - filter *string
func (_e *MockOrganizationalUnitClient_Expecter) ListOrganizationalUnits(limit interface{}, start interface{}, filter interface{}) *MockOrganizationalUnitClient_ListOrganizationalUnits_Call {
	return &MockOrganizationalUnitClient_ListOrganizationalUnits_Call{Call: _e.mock.On("ListOrganizationalUnits", limit, start, filter)}
}

func (_c *MockOrganizationalUnitClient_ListOrganizationalUnits_Call) Run(run func(limit *int64, start *string, filter *string)) *MockOrganizationalUnitClient_ListOrganizationalUnits_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*int64), args[1].(*string), args[2].(*string))
	})
	return _c
}

func (_c *MockOrganizationalUnitClient_ListOrganizationalUnits_Call) Return(_a0 *models.ListOrganizationalUnitsResponse, _a1 *apiutils.APIError) *MockOrganizationalUnitClient_ListOrganizationalUnits_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockOrganizationalUnitClient_ListOrganizationalUnits_Call) RunAndReturn(run func(*int64, *string, *string) (*models.ListOrganizationalUnitsResponse, *apiutils.APIError)) *MockOrganizationalUnitClient_ListOrganizationalUnits_Call {
	_c.Call.Return(run)
	return _c
}

// PatchOrganizationalUnit provides a mock function with given fields: id, embed, body
func (_m *MockOrganizationalUnitClient) PatchOrganizationalUnit(id string, embed *string, body *models.PatchOrganizationalUnitV2Request) (*models.PatchOrganizationalUnitResponseWrapper, *apiutils.APIError) {
	ret := _m.Called(id, embed, body)

	if len(ret) == 0 {
		panic("no return value specified for PatchOrganizationalUnit")
	}

	var r0 *models.PatchOrganizationalUnitResponseWrapper
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string, *string, *models.PatchOrganizationalUnitV2Request) (*models.PatchOrganizationalUnitResponseWrapper, *apiutils.APIError)); ok {
		return rf(id, embed, body)
	}
	if rf, ok := ret.Get(0).(func(string, *string, *models.PatchOrganizationalUnitV2Request) *models.PatchOrganizationalUnitResponseWrapper); ok {
		r0 = rf(id, embed, body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.PatchOrganizationalUnitResponseWrapper)
		}
	}

	if rf, ok := ret.Get(1).(func(string, *string, *models.PatchOrganizationalUnitV2Request) *apiutils.APIError); ok {
		r1 = rf(id, embed, body)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockOrganizationalUnitClient_PatchOrganizationalUnit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PatchOrganizationalUnit'
type MockOrganizationalUnitClient_PatchOrganizationalUnit_Call struct {
	*mock.Call
}

// PatchOrganizationalUnit is a helper method to define mock.On call
//   - id string
//   - embed *string
//   - body *models.PatchOrganizationalUnitV2Request
func (_e *MockOrganizationalUnitClient_Expecter) PatchOrganizationalUnit(id interface{}, embed interface{}, body interface{}) *MockOrganizationalUnitClient_PatchOrganizationalUnit_Call {
	return &MockOrganizationalUnitClient_PatchOrganizationalUnit_Call{Call: _e.mock.On("PatchOrganizationalUnit", id, embed, body)}
}

func (_c *MockOrganizationalUnitClient_PatchOrganizationalUnit_Call) Run(run func(id string, embed *string, body *models.PatchOrganizationalUnitV2Request)) *MockOrganizationalUnitClient_PatchOrganizationalUnit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(*string), args[2].(*models.PatchOrganizationalUnitV2Request))
	})
	return _c
}

func (_c *MockOrganizationalUnitClient_PatchOrganizationalUnit_Call) Return(_a0 *models.PatchOrganizationalUnitResponseWrapper, _a1 *apiutils.APIError) *MockOrganizationalUnitClient_PatchOrganizationalUnit_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockOrganizationalUnitClient_PatchOrganizationalUnit_Call) RunAndReturn(run func(string, *string, *models.PatchOrganizationalUnitV2Request) (*models.PatchOrganizationalUnitResponseWrapper, *apiutils.APIError)) *MockOrganizationalUnitClient_PatchOrganizationalUnit_Call {
	_c.Call.Return(run)
	return _c
}

// ReadOrganizationalUnit provides a mock function with given fields: id, embed
func (_m *MockOrganizationalUnitClient) ReadOrganizationalUnit(id string, embed *string) (*models.ReadOrganizationalUnitResponse, *apiutils.APIError) {
	ret := _m.Called(id, embed)

	if len(ret) == 0 {
		panic("no return value specified for ReadOrganizationalUnit")
	}

	var r0 *models.ReadOrganizationalUnitResponse
	var r1 *apiutils.APIError
	if rf, ok := ret.Get(0).(func(string, *string) (*models.ReadOrganizationalUnitResponse, *apiutils.APIError)); ok {
		return rf(id, embed)
	}
	if rf, ok := ret.Get(0).(func(string, *string) *models.ReadOrganizationalUnitResponse); ok {
		r0 = rf(id, embed)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ReadOrganizationalUnitResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string, *string) *apiutils.APIError); ok {
		r1 = rf(id, embed)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apiutils.APIError)
		}
	}

	return r0, r1
}

// MockOrganizationalUnitClient_ReadOrganizationalUnit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadOrganizationalUnit'
type MockOrganizationalUnitClient_ReadOrganizationalUnit_Call struct {
	*mock.Call
}

// ReadOrganizationalUnit is a helper method to define mock.On call
//   - id string
//   - embed *string
func (_e *MockOrganizationalUnitClient_Expecter) ReadOrganizationalUnit(id interface{}, embed interface{}) *MockOrganizationalUnitClient_ReadOrganizationalUnit_Call {
	return &MockOrganizationalUnitClient_ReadOrganizationalUnit_Call{Call: _e.mock.On("ReadOrganizationalUnit", id, embed)}
}

func (_c *MockOrganizationalUnitClient_ReadOrganizationalUnit_Call) Run(run func(id string, embed *string)) *MockOrganizationalUnitClient_ReadOrganizationalUnit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(*string))
	})
	return _c
}

func (_c *MockOrganizationalUnitClient_ReadOrganizationalUnit_Call) Return(_a0 *models.ReadOrganizationalUnitResponse, _a1 *apiutils.APIError) *MockOrganizationalUnitClient_ReadOrganizationalUnit_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockOrganizationalUnitClient_ReadOrganizationalUnit_Call) RunAndReturn(run func(string, *string) (*models.ReadOrganizationalUnitResponse, *apiutils.APIError)) *MockOrganizationalUnitClient_ReadOrganizationalUnit_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockOrganizationalUnitClient creates a new instance of MockOrganizationalUnitClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOrganizationalUnitClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOrganizationalUnitClient {
	mock := &MockOrganizationalUnitClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
